/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package library.version1.view;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import library.version1.controller.BackUpController;

/**
 *
 * @author dinumini
 */
public class BackUpProgramme extends javax.swing.JDialog {

    /**
     * Creates new form BackUpProgramme
     */
    public BackUpProgramme(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        restoreButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Backup System");

        titleLabel.setFont(new java.awt.Font("Stencil", 3, 48)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cd-burner-copy-icon.png"))); // NOI18N
        titleLabel.setText("Backup System");

        createButton.setFont(new java.awt.Font("Stencil", 1, 36)); // NOI18N
        createButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/backup-icon.png"))); // NOI18N
        createButton.setText("Create Backup");
        createButton.setBorderPainted(false);
        createButton.setContentAreaFilled(false);
        createButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        restoreButton.setFont(new java.awt.Font("Stencil", 1, 36)); // NOI18N
        restoreButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/backup-restore-icon.png"))); // NOI18N
        restoreButton.setText("Restore From Backup");
        restoreButton.setBorderPainted(false);
        restoreButton.setContentAreaFilled(false);
        restoreButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        restoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(restoreButton))
            .addGroup(layout.createSequentialGroup()
                .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(restoreButton)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
       // String password = JOptionPane.showInputDialog(this, "Please Enter MySQL Password");
        String password="lpdscneo";
        try {
            JFileChooser backupFile = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("sql File", "sql");
            backupFile.setFileFilter(filter);
            int result =backupFile.showSaveDialog(this);
            if(result==JFileChooser.APPROVE_OPTION){
                File file = backupFile.getSelectedFile();
                String executeCmd = "mysqldump -uroot -p" + password + " Library -r " + file.getPath()+".sql";
                Process runtimeProcess;
                runtimeProcess = Runtime.getRuntime().exec(executeCmd);
                int processComplete = runtimeProcess.waitFor();
                if (processComplete == 0) {
                    JOptionPane.showMessageDialog(this, "BackUP Created", "Complete Backup", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error", "Error Message", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Wrong Password", "Error Message", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_createButtonActionPerformed

    private void restoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreButtonActionPerformed
    //String password = JOptionPane.showInputDialog(this, "Please Enter MySQL Password");
    String password="lpdscneo";
        try {
            JFileChooser backupFile = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("sql Files", "sql");
            backupFile.setFileFilter(filter);
            int result =backupFile.showOpenDialog(this);
            
            if(result==JFileChooser.APPROVE_OPTION){
                File file = backupFile.getSelectedFile();
                System.out.println(file.getPath());
                String[] executeCmd = new String[]{"mysql", "--user=root", "--password="+password,"Library","-e", "source "+file};
                Process runtimeProcess;
                runtimeProcess = Runtime.getRuntime().exec(executeCmd);
                int processComplete = runtimeProcess.waitFor();
                if (processComplete == 0) {
                    JOptionPane.showMessageDialog(this, "BackUP Restored", "Complete Backup", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error", "Error Message", JOptionPane.ERROR_MESSAGE);
                }  
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Wrong Password", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
     
        // TODO add your handling code here:
    }//GEN-LAST:event_restoreButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BackUpProgramme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BackUpProgramme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BackUpProgramme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BackUpProgramme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BackUpProgramme dialog = new BackUpProgramme(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createButton;
    private javax.swing.JButton restoreButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
