/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package library.version1.view;


import com.toedter.calendar.IDateEditor;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import library.version1.controller.GuarantorController;
import library.version1.controller.MemberController;
import library.version1.controller.MemberTypeController;
import library.version1.extra.Validate;
import library.version1.model.Member;
import library.version1.model.MemberDetail;

/**
 *
 * @author Neo_
 */
public class EditMember extends javax.swing.JDialog {
     boolean number,name,address,dob,reNewDate,memberType,guarantor;
        
    /**
     * Creates new form AddMember
     */
    public EditMember(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
               
        memberNumberText.requestFocus();
        
        
    }
    
    public EditMember(java.awt.Frame parent, boolean modal, String memberNumber) {
        super(parent, modal);
        initComponents();
        
        setLocationRelativeTo(null);
        setForm(memberNumber);
                
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        personalDetailsPanel = new javax.swing.JPanel();
        memberNumberLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        memberNumberText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressText = new javax.swing.JTextArea();
        dobChooser = new com.toedter.calendar.JDateChooser();
        dobLabel = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        otherDetailPanel = new javax.swing.JPanel();
        reNewDateLabel = new javax.swing.JLabel();
        memberTypeLabel = new javax.swing.JLabel();
        guarantorLabel = new javax.swing.JLabel();
        memberTypeCombo = new javax.swing.JComboBox();
        guarantorCombo = new javax.swing.JComboBox();
        addMemberTypeButton = new javax.swing.JButton();
        addGuarantorButton = new javax.swing.JButton();
        renewDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Member");

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Person-Male-Dark-icon.png"))); // NOI18N
        titleLabel.setText("Edit Member");

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        personalDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Details"));

        memberNumberLabel.setText("Member Number");

        nameLabel.setText("Name");

        addressLabel.setText("Address");

        memberNumberText.setEditable(false);
        memberNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberNumberTextActionPerformed(evt);
            }
        });
        memberNumberText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                memberNumberTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                memberNumberTextKeyReleased(evt);
            }
        });

        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });
        nameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTextKeyReleased(evt);
            }
        });

        addressText.setColumns(20);
        addressText.setRows(5);
        addressText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addressTextKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(addressText);

        dobChooser.setDateFormatString("yyyy-MM-d");
        dobChooser.setNextFocusableComponent(nextButton);
        dobChooser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dobChooserMouseExited(evt);
            }
        });
        dobChooser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dobChooserFocusLost(evt);
            }
        });
        dobChooser.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                dobChooserAncestorAdded(evt);
            }
        });

        dobLabel.setText("Date Of Birth");

        nextButton.setText("Next >");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout personalDetailsPanelLayout = new javax.swing.GroupLayout(personalDetailsPanel);
        personalDetailsPanel.setLayout(personalDetailsPanelLayout);
        personalDetailsPanelLayout.setHorizontalGroup(
            personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(memberNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dobLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameText)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dobChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(memberNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, personalDetailsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        personalDetailsPanelLayout.setVerticalGroup(
            personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(personalDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memberNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memberNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(personalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dobChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Personal", personalDetailsPanel);

        otherDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Other Detail"));

        reNewDateLabel.setText("Renew Date");

        memberTypeLabel.setText("Member Type");

        guarantorLabel.setText("Guarantor ");

        memberTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Member Type>" }));
        memberTypeCombo.setNextFocusableComponent(renewDateChooser);
        memberTypeCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                memberTypeComboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        memberTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberTypeComboActionPerformed(evt);
            }
        });
        memberTypeCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                memberTypeComboKeyPressed(evt);
            }
        });

        guarantorCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Guararntor>" }));
        guarantorCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guarantorComboActionPerformed(evt);
            }
        });
        guarantorCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guarantorComboKeyPressed(evt);
            }
        });

        addMemberTypeButton.setText("New Member Type");
        addMemberTypeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMemberTypeButtonActionPerformed(evt);
            }
        });

        addGuarantorButton.setText("New Guarantor");
        addGuarantorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGuarantorButtonActionPerformed(evt);
            }
        });

        renewDateChooser.setToolTipText("");
        renewDateChooser.setDateFormatString("yyyy-MM-d");
        renewDateChooser.setNextFocusableComponent(guarantorCombo);
        renewDateChooser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                renewDateChooserMouseExited(evt);
            }
        });

        javax.swing.GroupLayout otherDetailPanelLayout = new javax.swing.GroupLayout(otherDetailPanel);
        otherDetailPanel.setLayout(otherDetailPanelLayout);
        otherDetailPanelLayout.setHorizontalGroup(
            otherDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otherDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(otherDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(reNewDateLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guarantorLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(memberTypeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(otherDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guarantorCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 448, Short.MAX_VALUE)
                    .addComponent(memberTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(otherDetailPanelLayout.createSequentialGroup()
                        .addComponent(renewDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(otherDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addGuarantorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addMemberTypeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        otherDetailPanelLayout.setVerticalGroup(
            otherDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otherDetailPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(otherDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memberTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memberTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMemberTypeButton))
                .addGap(18, 18, 18)
                .addGroup(otherDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guarantorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guarantorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addGuarantorButton))
                .addGap(18, 18, 18)
                .addGroup(otherDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reNewDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(renewDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Other", otherDetailPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void setForm(String memberNumber){
        initMemberTypeCombo();
        initGuarantorCombo();
        
        try {
            MemberDetail memberDetail = MemberController.getMemberDetail(memberNumber);
            memberNumberText.setText(memberDetail.getMemberNumber());
            nameText.setText(memberDetail.getMemberName());
            addressText.setText(memberDetail.getAddress());
            dobChooser.setDate(memberDetail.getDob());
            memberTypeCombo.setSelectedItem(memberDetail.getmType());
            guarantorCombo.setSelectedItem(memberDetail.getGuarantorName());
            renewDateChooser.setDate(memberDetail.getRenewDate());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
        
        
        
   
    }
    
    
    
    
    
      
    
    
    private void memberTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberTypeComboActionPerformed
            // TODO add your handling code here:
        
                
    }//GEN-LAST:event_memberTypeComboActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        boolean deactive = (nameText.getText().isEmpty() || addressText.getText().isEmpty() || memberTypeCombo.getSelectedIndex()==0 || guarantorCombo.getSelectedIndex()==0 );
        
        if(!deactive){

            String memberNumber= memberNumberText.getText();
            String name= nameText.getText();
            String address=addressText.getText();
            String dob=((JTextField)dobChooser.getDateEditor().getUiComponent()).getText();
            String reNewDate=((JTextField)renewDateChooser.getDateEditor().getUiComponent()).getText();
            String mtId=null;
            try {
                mtId=MemberTypeController.getMemberTypeId(memberTypeCombo.getSelectedItem().toString());  // TODO add your handling code here:
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            }
            String gId=null;
            try {
                gId=GuarantorController.getGuarantorId(guarantorCombo.getSelectedItem().toString());
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            }
            Member member=new Member(memberNumber,name,address,dob,reNewDate,mtId,gId);
            try {
                int result = MemberController.updateMember(member);
                if(result==1){
                    JOptionPane.showMessageDialog(this, "Member Updated", "Update Member", 1);
                    this.setVisible(false);
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            }
        }else{
                JOptionPane.showMessageDialog(this, "Please Fill the Form Completely");
        }
        
    }//GEN-LAST:event_editButtonActionPerformed

    private void addMemberTypeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMemberTypeButtonActionPerformed
        new AddMemberType(null,true,1).setVisible(true);  // TODO add your handling code here:
        initMemberTypeCombo();
        memberTypeCombo.setSelectedIndex(memberTypeCombo.getItemCount()-1);
    }//GEN-LAST:event_addMemberTypeButtonActionPerformed

    private void addGuarantorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGuarantorButtonActionPerformed
        new AddGuarantor(null,true,1).setVisible(true);         // TODO add your handling code here:
        initGuarantorCombo();
        guarantorCombo.setSelectedIndex(guarantorCombo.getItemCount()-1);
    }//GEN-LAST:event_addGuarantorButtonActionPerformed

    private void memberNumberTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memberNumberTextKeyPressed
        if(!Validate.validateMemberNumber(memberNumberText.getText()+evt.getKeyChar()+"")){
           if(evt.getKeyCode()!=KeyEvent.VK_BACK_SPACE){
               getToolkit().beep();
               memberNumberText.setEditable(false);
           }else{
               memberNumberText.setEditable(true);
           }
       }else{
          memberNumberText.setEditable(true);
       }          // TODO add your handling code here:
    }//GEN-LAST:event_memberNumberTextKeyPressed

    private void nameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyPressed
       if(!Validate.validateLetters(evt.getKeyChar()+"")){
           nameText.setEditable(false);
       }else{
           nameText.setEditable(true);
       }          // TODO add your handling code here:
    }//GEN-LAST:event_nameTextKeyPressed

    private void memberNumberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberNumberTextActionPerformed
        nameText.requestFocus();        // TODO add your handling code here:
        
    }//GEN-LAST:event_memberNumberTextActionPerformed

    private void memberNumberTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memberNumberTextKeyReleased
                   
    }//GEN-LAST:event_memberNumberTextKeyReleased

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        addressText.requestFocus();  // TODO add your handling code here:
        
    }//GEN-LAST:event_nameTextActionPerformed

    private void nameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyReleased
        if(!nameText.getText().isEmpty()){
            name=true;
        }else{
            name=false;
        }    
                         // TODO add your handling code here:
    }//GEN-LAST:event_nameTextKeyReleased

    private void addressTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTextKeyReleased
       if(!addressText.getText().isEmpty()){
            address=true;
       }else{
            address=false;
       } 
                    // TODO add your handling code here:
    }//GEN-LAST:event_addressTextKeyReleased

    private void dobChooserAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_dobChooserAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_dobChooserAncestorAdded

    private void dobChooserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dobChooserFocusLost
         // TODO add your handling code here:
    }//GEN-LAST:event_dobChooserFocusLost

    private void guarantorComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guarantorComboActionPerformed
        if(guarantorCombo.getSelectedIndex()!=0){
            guarantor=true;
        }else{
            guarantor=false;                       
        }   
                        // TODO add your handling code here:
    }//GEN-LAST:event_guarantorComboActionPerformed

    private void dobChooserMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dobChooserMouseExited
       // TODO add your handling code here:
    }//GEN-LAST:event_dobChooserMouseExited

    private void renewDateChooserMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_renewDateChooserMouseExited
       // TODO add your handling code here:
    }//GEN-LAST:event_renewDateChooserMouseExited

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void memberTypeComboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_memberTypeComboPopupMenuWillBecomeInvisible
    if(memberTypeCombo.getSelectedIndex()!=0){
            memberType=true;
            guarantorCombo.requestFocus();             // TODO add your handling code here:
        }else{
            memberType=false;                       
        }
        
                     // TODO add your handling code here:
    }//GEN-LAST:event_memberTypeComboPopupMenuWillBecomeInvisible

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        jTabbedPane1.setSelectedIndex(1);        // TODO add your handling code here:
    }//GEN-LAST:event_nextButtonActionPerformed

    private void memberTypeComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memberTypeComboKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_DOWN || evt.getKeyCode()==KeyEvent.VK_UP){
            memberTypeCombo.showPopup();
           
        }         // TODO add your handling code here:
    }//GEN-LAST:event_memberTypeComboKeyPressed

    private void guarantorComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guarantorComboKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_DOWN || evt.getKeyCode()==KeyEvent.VK_UP){
            guarantorCombo.showPopup();
           
        }         // TODO add your handling code here:
    }//GEN-LAST:event_guarantorComboKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditMember dialog = new EditMember(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGuarantorButton;
    private javax.swing.JButton addMemberTypeButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextArea addressText;
    private javax.swing.JButton cancelButton;
    private com.toedter.calendar.JDateChooser dobChooser;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JButton editButton;
    private javax.swing.JComboBox guarantorCombo;
    private javax.swing.JLabel guarantorLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel memberNumberLabel;
    private javax.swing.JTextField memberNumberText;
    private javax.swing.JComboBox memberTypeCombo;
    private javax.swing.JLabel memberTypeLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JButton nextButton;
    private javax.swing.JPanel otherDetailPanel;
    private javax.swing.JPanel personalDetailsPanel;
    private javax.swing.JLabel reNewDateLabel;
    private com.toedter.calendar.JDateChooser renewDateChooser;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    private void initMemberTypeCombo() {
        ArrayList<String> memberTypeList;
           
        try {
            memberTypeCombo.removeAllItems();
            memberTypeCombo.addItem("<Choose MemberType>");
            memberTypeList = MemberTypeController.getMemberTypes();
            if(memberTypeList!=null){
                    for(String type : memberTypeList){
                        memberTypeCombo.addItem(type);
                    }
            }
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
                
    }

    private void initGuarantorCombo() {
         ArrayList<String> guarantorList;
         try {
            guarantorCombo.removeAllItems();
            guarantorCombo.addItem("<Choose Guarantor>");
            guarantorList = GuarantorController.getGuarantorNames();
            if(guarantorList!=null){
                    for(String name : guarantorList){
                        guarantorCombo.addItem(name);
                    }
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
}
