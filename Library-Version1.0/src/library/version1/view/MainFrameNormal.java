/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package library.version1.view;


import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import library.version1.controller.AuthorController;
import library.version1.controller.BookTitleController;
import library.version1.extra.TransparentMenuItem;
import library.version1.extra.TransparentPopupMenu;

/**
 *
 * @author Neo_
 */
public class MainFrameNormal extends javax.swing.JFrame {
  
    /**
     * Creates new form MainFrame
     */
    public MainFrameNormal() {
        initComponents();
        setSize(Toolkit.getDefaultToolkit().getScreenSize());
        setResizable(false);
        
        
        
        //Set BookList
        setBookList();
        setAuthorList();
        //getContentPane().setBackground(Color.WHITE);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        booksButton = new javax.swing.JButton();
        membersButton = new javax.swing.JButton();
        authorsButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        listPanel = new javax.swing.JPanel();
        searchTabbedPane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookList = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        authorList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        borrowBook = new javax.swing.JButton();
        receiveBook = new javax.swing.JButton();
        reportsButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Management Software");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });

        buttonPanel.setLayout(new java.awt.GridLayout(1, 0));

        booksButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        booksButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Books-2-icon new.png"))); // NOI18N
        booksButton.setText("Books");
        booksButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), null, null, new java.awt.Color(255, 255, 0)));
        booksButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        booksButton.setFocusable(false);
        booksButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                booksButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                booksButtonMouseExited(evt);
            }
        });
        booksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booksButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(booksButton);

        membersButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        membersButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Office-Client-Male-Light-icon.png"))); // NOI18N
        membersButton.setText("Members");
        membersButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), null, null, new java.awt.Color(255, 255, 0)));
        membersButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        membersButton.setFocusable(false);
        membersButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                membersButtonMouseEntered(evt);
            }
        });
        membersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membersButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(membersButton);

        authorsButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        authorsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Pages_64x64.png"))); // NOI18N
        authorsButton.setText("Authors");
        authorsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), null, null, new java.awt.Color(255, 255, 0)));
        authorsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        authorsButton.setFocusable(false);
        authorsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                authorsButtonMouseEntered(evt);
            }
        });
        authorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorsButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(authorsButton);

        settingsButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        settingsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/document-icon.png"))); // NOI18N
        settingsButton.setText("Category");
        settingsButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), null, null, new java.awt.Color(255, 255, 0)));
        settingsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settingsButton.setFocusable(false);
        settingsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingsButtonMouseEntered(evt);
            }
        });
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(settingsButton);

        listPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Lists"));

        jScrollPane1.setViewportView(bookList);

        searchTabbedPane.addTab("Books", jScrollPane1);

        jScrollPane3.setViewportView(authorList);

        searchTabbedPane.addTab("Authors", jScrollPane3);

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(searchTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Baddegama Public Library");

        borrowBook.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        borrowBook.setText("Borrow Book");
        borrowBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowBookActionPerformed(evt);
            }
        });

        receiveBook.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        receiveBook.setText("Receive Book");
        receiveBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiveBookActionPerformed(evt);
            }
        });

        reportsButton.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        reportsButton.setText("View Orders ");
        reportsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportsButton.setFocusable(false);
        reportsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                reportsButtonMouseEntered(evt);
            }
        });
        reportsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(listPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(borrowBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiveBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reportsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1065, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                        .addComponent(listPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(borrowBook, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(receiveBook, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reportsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setBookList(){
        DefaultListModel bookListModel=new DefaultListModel();
        bookList.setModel(bookListModel);
        try {
            ArrayList<String> books=BookTitleController.getBookTitles();
            for(String book : books){
                bookListModel.addElement(book);
            }
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
     private void setAuthorList(){
        DefaultListModel authorListModel=new DefaultListModel();
        authorList.setModel(authorListModel);
        try {
            ArrayList<String> authors=AuthorController.getAuthorNames();
            for(String author : authors){
                authorListModel.addElement(author);
            }
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    private void booksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booksButtonActionPerformed
        createMenu((Component) evt.getSource(),"Book");    
    }//GEN-LAST:event_booksButtonActionPerformed

    private void authorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorsButtonActionPerformed
        createMenu((Component) evt.getSource(),"Author");  
    }//GEN-LAST:event_authorsButtonActionPerformed

    private void booksButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_booksButtonMouseEntered
        createMenu((Component) evt.getSource(),"Book");
    }//GEN-LAST:event_booksButtonMouseEntered

    private void authorsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_authorsButtonMouseEntered
        createMenu((Component) evt.getSource(),"Author");
    }//GEN-LAST:event_authorsButtonMouseEntered

    private void membersButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membersButtonMouseEntered
        createMenu((Component) evt.getSource(),"Member");  
    }//GEN-LAST:event_membersButtonMouseEntered

    private void booksButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_booksButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_booksButtonMouseExited

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void membersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membersButtonActionPerformed
        createMenu((Component) evt.getSource(),"Member");        // TODO add your handling code here:
    }//GEN-LAST:event_membersButtonActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        setBookList();
        setAuthorList();    // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    private void borrowBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowBookActionPerformed
        new BorrowBook(this, true).setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_borrowBookActionPerformed

    private void receiveBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiveBookActionPerformed
        new ReceiveBook(this, true).setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_receiveBookActionPerformed

    private void reportsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsButtonMouseEntered
                   // TODO add your handling code here:
    }//GEN-LAST:event_reportsButtonMouseEntered

    private void settingsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsButtonMouseEntered
        createMenu((Component) evt.getSource(),"Category");        // TODO add your handling code here:
    }//GEN-LAST:event_settingsButtonMouseEntered

    private void reportsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsButtonActionPerformed
        new ViewOrderBooks(this, true).setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_reportsButtonActionPerformed

    private void createMenu(Component component,final String menu){
        TransparentPopupMenu PopUpMenu=new TransparentPopupMenu();
        
        PopUpMenu.removeAll();
        
        TransparentMenuItem add=new TransparentMenuItem("Add New "+menu);
        
        ImageIcon imageAdd = null; 
        if(menu.equals("Book")){
            imageAdd = new ImageIcon("./src/icons/Actions-address-book-new-icon.png");
        }else if(menu.equals("Member")){
            imageAdd = new ImageIcon("./src/icons/add-contact-icon.png");
        }else if(menu.equals("Author")){
            imageAdd = new ImageIcon("./src/icons/Occupations-Writer-Male-Light-icon.png");            
        }else if(menu.equals("Category")){
            imageAdd = new ImageIcon("./src/icons/Folder-Add-icon.png");            
        }
        add.setIcon(imageAdd);
        add.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                switch(menu){
                    case "Book"     : new AddBook(MainFrameNormal.this, true).setVisible(true);
                                      break;
                    case "Member"   : new AddMember(MainFrameNormal.this, true).setVisible(true);
                                      break;
                    case "Author"   : new AddAuthor(MainFrameNormal.this, true).setVisible(true);
                                      break;
                    case "Category" : new AddCategory(MainFrameNormal.this, true).setVisible(true);
                                      break;    
               }
            }
        }); 
        PopUpMenu.add(add);
        add.setMnemonic('A');
        
        if(menu!="Author" && menu!="Category"){
            TransparentMenuItem search=new TransparentMenuItem("Search "+menu);
            ImageIcon imageSearch = null; 
            if(menu.equals("Book")){
                imageSearch = new ImageIcon("./src/icons/Search-Search-HD-icon.png");
            }else if(menu.equals("Member")){
                imageSearch = new ImageIcon("./src/icons/user-search-icon.png");
            }
            search.setIcon(imageSearch);
            search.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                   switch(menu){
                          case "Book"     : new SearchBook(MainFrameNormal.this, true).setVisible(true);
                                            break;
                          case "Member"   : new SearchMember(MainFrameNormal.this, true).setVisible(true);
                                            break;
                   }
                }
            });
            PopUpMenu.add(search);
            search.setMnemonic('S');
        }
        
        TransparentMenuItem view=new TransparentMenuItem("View All "+menu+"s");
        ImageIcon imageView = null; 
        if(menu.equals("Book")){
            imageView = new ImageIcon("./src/icons/Book-icon.png");
        }else if(menu.equals("Member")){
            imageView = new ImageIcon("./src/icons/Address-book-icon.png");
        }else if(menu.equals("Author")){
            imageView = new ImageIcon("./src/icons/Dj-View-icon.png");            
        }else if(menu.equals("Category")){
            imageView = new ImageIcon("./src/icons/folder-documents-icon.png");            
        }
        view.setIcon(imageView);
        view.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
              switch(menu){
                      case "Book"     : new ViewBook(MainFrameNormal.this, true).setVisible(true);
                                        break;
                      case "Member"   : new ViewMember(MainFrameNormal.this, true).setVisible(true);
                                        break;
                      case "Author"   : new ViewAuthor(MainFrameNormal.this, true).setVisible(true);
                                        break;
                      case "Category" : new ViewCategory(MainFrameNormal.this, true).setVisible(true);
                                        break;
               }
            }
        });
        PopUpMenu.add(view);
        view.setMnemonic('V');
        
         if(menu.equals("Book")){
            TransparentMenuItem duplicateBook=new TransparentMenuItem("Duplicate "+menu);
            ImageIcon imageDuplicateBook = null; 
            imageDuplicateBook = new ImageIcon("./src/icons/folder-documents-icon.png");            

            duplicateBook.setIcon(imageDuplicateBook);
            duplicateBook.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    new DuplicateBook(MainFrameNormal.this, true).setVisible(true);
                }
            });
            PopUpMenu.add(duplicateBook);
        }
        showMenuNice(component,PopUpMenu,PopUpMenu.getComponentCount());
    
    }
       
    private void showMenuNice(Component component, final JPopupMenu menu,int size){
        Dimension dimension = new Dimension();
        dimension.setSize(component.getWidth(),component.getHeight()*size);
        menu.setPreferredSize(dimension);
        menu.show(component, -1, component.getHeight());
    }
    

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrameNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrameNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrameNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrameNormal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrameNormal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList authorList;
    private javax.swing.JButton authorsButton;
    private javax.swing.JList bookList;
    private javax.swing.JButton booksButton;
    private javax.swing.JButton borrowBook;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel listPanel;
    private javax.swing.JButton membersButton;
    private javax.swing.JButton receiveBook;
    private javax.swing.JButton reportsButton;
    private javax.swing.JTabbedPane searchTabbedPane;
    private javax.swing.JButton settingsButton;
    // End of variables declaration//GEN-END:variables
}
   
