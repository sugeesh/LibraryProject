/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package library.version1.view;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import library.version1.controller.BookBorrowDetailController;
import library.version1.controller.BookController;
import library.version1.controller.BookReceiveDetailController;
import library.version1.controller.BookTitleController;
import library.version1.controller.MemberController;
import library.version1.controller.OrderBookDetailController;
import library.version1.controller.OrderController;
import library.version1.extra.IdGenarate;
import library.version1.extra.Validate;
import library.version1.model.BookBorrowDetail;
import library.version1.model.BookReceiveDetail;
import library.version1.model.Order;
import library.version1.model.OrderBookDetail;
import library.version1.model.OrderDetail;

/**
 *
 * @author Neo_
 */
public class ReceiveBook extends javax.swing.JDialog {
     int bookCount;
    /**
     * Creates new form ReceiveBook
     */
    public ReceiveBook(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        memberNumberLabel = new javax.swing.JLabel();
        memberNumberText = new javax.swing.JTextField();
        book1Panel = new javax.swing.JPanel();
        booktitleLabel1 = new javax.swing.JLabel();
        accessionNumberLabel1 = new javax.swing.JLabel();
        returnDateLabel1 = new javax.swing.JLabel();
        accessionNumberText1 = new javax.swing.JTextField();
        titleText1 = new javax.swing.JTextField();
        returnDate1 = new javax.swing.JTextField();
        dueDatesLabel1 = new javax.swing.JLabel();
        bBDCIdLabel1 = new javax.swing.JLabel();
        bBDCIdText1 = new javax.swing.JTextField();
        book2Panel = new javax.swing.JPanel();
        booktitleLabel2 = new javax.swing.JLabel();
        accessionNumberLabel2 = new javax.swing.JLabel();
        returnDateLabel2 = new javax.swing.JLabel();
        accessionNumberText2 = new javax.swing.JTextField();
        titleText2 = new javax.swing.JTextField();
        returnDate2 = new javax.swing.JTextField();
        dueDatesLabel2 = new javax.swing.JLabel();
        bBDCIdText2 = new javax.swing.JTextField();
        bBDCIdLabel2 = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        hintLabel = new javax.swing.JLabel();
        book1Radio = new javax.swing.JRadioButton();
        book2Radio = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Receive Books");

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Things-Book-icon.png"))); // NOI18N
        titleLabel.setText("Receive Books");

        memberNumberLabel.setText("Member Number");

        memberNumberText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                memberNumberTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                memberNumberTextKeyReleased(evt);
            }
        });

        book1Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Book 1"));
        book1Panel.setToolTipText("");

        booktitleLabel1.setText("Title");

        accessionNumberLabel1.setText("Accession Number");

        returnDateLabel1.setText("Return Date");

        accessionNumberText1.setEnabled(false);

        titleText1.setEditable(false);
        titleText1.setEnabled(false);

        returnDate1.setEditable(false);
        returnDate1.setEnabled(false);

        bBDCIdLabel1.setText("BBDCId");

        bBDCIdText1.setEditable(false);
        bBDCIdText1.setEnabled(false);

        javax.swing.GroupLayout book1PanelLayout = new javax.swing.GroupLayout(book1Panel);
        book1Panel.setLayout(book1PanelLayout);
        book1PanelLayout.setHorizontalGroup(
            book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(book1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(book1PanelLayout.createSequentialGroup()
                        .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(returnDateLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(booktitleLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accessionNumberLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dueDatesLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(accessionNumberText1)
                            .addComponent(titleText1)
                            .addComponent(returnDate1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)))
                    .addGroup(book1PanelLayout.createSequentialGroup()
                        .addComponent(bBDCIdLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bBDCIdText1)))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        book1PanelLayout.setVerticalGroup(
            book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(book1PanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accessionNumberLabel1)
                    .addComponent(accessionNumberText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booktitleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnDateLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dueDatesLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bBDCIdLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBDCIdText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        book2Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Book 2"));
        book2Panel.setToolTipText("");

        booktitleLabel2.setText("Title");

        accessionNumberLabel2.setText("Accession Number");

        returnDateLabel2.setText("Return Date");

        accessionNumberText2.setEnabled(false);
        accessionNumberText2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessionNumberText2ActionPerformed(evt);
            }
        });

        titleText2.setEditable(false);
        titleText2.setEnabled(false);
        titleText2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleText2ActionPerformed(evt);
            }
        });

        returnDate2.setEditable(false);
        returnDate2.setEnabled(false);

        bBDCIdText2.setEditable(false);
        bBDCIdText2.setEnabled(false);

        bBDCIdLabel2.setText("BBDCId");

        javax.swing.GroupLayout book2PanelLayout = new javax.swing.GroupLayout(book2Panel);
        book2Panel.setLayout(book2PanelLayout);
        book2PanelLayout.setHorizontalGroup(
            book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(book2PanelLayout.createSequentialGroup()
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, book2PanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(bBDCIdLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bBDCIdText2, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, book2PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(returnDateLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(booktitleLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accessionNumberLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(accessionNumberText2, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(titleText2)
                            .addComponent(returnDate2)
                            .addComponent(dueDatesLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        book2PanelLayout.setVerticalGroup(
            book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(book2PanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accessionNumberLabel2)
                    .addComponent(accessionNumberText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(booktitleLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnDateLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dueDatesLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bBDCIdText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBDCIdLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        acceptButton.setText("Accept");
        acceptButton.setEnabled(false);
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        hintLabel.setText("Type Member Number and Press Enter,");

        book1Radio.setSelected(true);
        book1Radio.setText("Book 1");
        book1Radio.setEnabled(false);

        book2Radio.setSelected(true);
        book2Radio.setText("Book 2");
        book2Radio.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(book1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(book2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(memberNumberLabel)
                        .addGap(18, 18, 18)
                        .addComponent(memberNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(book1Radio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(book2Radio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(hintLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(hintLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(memberNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(memberNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(book1Radio)
                        .addGap(4, 4, 4)
                        .addComponent(book2Radio)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(book2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book1Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setForm(){
        acceptButton.setEnabled(false);
        memberNumberText.setText(null);
        accessionNumberText1.setText(null);
        accessionNumberText2.setText(null);
        titleText1.setText(null);
        titleText2.setText(null);
        returnDate1.setText(null);
        returnDate2.setText(null);
        bBDCIdText1.setText(null);
        bBDCIdText2.setText(null);
        dueDatesLabel1.setText(null);
        dueDatesLabel2.setText(null);
        book1Radio.setEnabled(false);
        book2Radio.setEnabled(false);
        memberNumberText.requestFocus();
        
    }
    
    
    
    
    
    private void accessionNumberText2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessionNumberText2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accessionNumberText2ActionPerformed

    private void titleText2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleText2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleText2ActionPerformed

    private void memberNumberTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memberNumberTextKeyReleased
        String memberNumber = memberNumberText.getText();
        ArrayList<BookBorrowDetail> bookBorrowDetail =null;
        try {
            bookBorrowDetail= BookBorrowDetailController.getNotReturnedBooks(memberNumber);  // To Get Not Returned books from the member
       } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
       } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
       }
        
        if(bookBorrowDetail.size()==1){     // If there is one book has to be return
            bookCount=1;
            acceptButton.setEnabled(true);
            setValuesBook1(bookBorrowDetail);
        }else if(bookBorrowDetail.size()==2){       // If there is two books has to be return
            bookCount=2;
            acceptButton.setEnabled(true);
            setValuesBook1(bookBorrowDetail);
            setValuesBook2(bookBorrowDetail);
            book1Radio.setEnabled(true);
            book2Radio.setEnabled(true);
        }else{
            bookCount=0;
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_memberNumberTextKeyReleased

    private void memberNumberTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memberNumberTextKeyPressed
           if(!Validate.validateMemberNumber(memberNumberText.getText()+evt.getKeyChar()+"")){       // Validate MemberNumberText
               if(evt.getKeyCode()!=KeyEvent.VK_BACK_SPACE){
                    getToolkit().beep();
                    memberNumberText.setEditable(false);
                }else{
                    memberNumberText.setEditable(true);
                }
           }else{
              memberNumberText.setEditable(true);
           }         // TODO add your handling code here:
    }//GEN-LAST:event_memberNumberTextKeyPressed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        if(bookCount==1){
            receiveBook1();                 
        }else if(bookCount==2){
            if(book1Radio.isSelected()){
                receiveBook1();
            }
            if(book2Radio.isSelected()){
                receiveBook2();
            }
            if(!book1Radio.isSelected() && !book2Radio.isSelected()){
                JOptionPane.showMessageDialog(null, "Please Select a book","Error Message", JOptionPane.ERROR_MESSAGE);
            }
        }
        bookCount=0;
        setForm();
               
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed
   
  
    
    private void setValuesBook1(ArrayList<BookBorrowDetail> bookBorrowDetail){      
        for(BookBorrowDetail book: bookBorrowDetail){
            accessionNumberText1.setText(book.getAccessionNumber());
            try {
                titleText1.setText(BookTitleController.getTitleForBook(book.getAccessionNumber()));
            }catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            }
            returnDate1.setText(book.getReturnDate());
            int dueDates=Integer.parseInt(book.getDueDates());
            if(dueDates>=0){
                dueDatesLabel1.setText("No Fine for Book 1 ");
            }else{
                dueDatesLabel1.setText("Fine for Book 1 -  Rs. "+dueDates*0.50);
            }
            bBDCIdText1.setText(book.getbBDId());
            break;
        }
    }
    
 
    
    private void setValuesBook2(ArrayList<BookBorrowDetail> bookBorrowDetail){
        for(BookBorrowDetail book: bookBorrowDetail){
            accessionNumberText2.setText(book.getAccessionNumber());
            returnDate2.setText(book.getReturnDate());
            bBDCIdText2.setText(book.getbBDId());
            try {
                titleText2.setText(BookTitleController.getTitleForBook(book.getAccessionNumber()));
            }catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            }
            int dueDates=Integer.parseInt(book.getDueDates());
            if(dueDates>=0){
                dueDatesLabel2.setText("No Fine for Book 2 ");
            }else{
                dueDatesLabel2.setText("Fine for Book 2 -  Rs. "+dueDates*0.50);
            }
        }
    }
    
    private void receiveBook1(){
        try {
            String bRDId=IdGenarate.getId("BRD", "BRDID","BookReceiveDetail");
            String accessionNumber=accessionNumberText1.getText();
            String memberNumber=memberNumberText.getText();
            String returnDate=returnDate1.getText();
            String bBDId= bBDCIdText1.getText();
            BookReceiveDetail bookReceiveDetail=new BookReceiveDetail(bRDId, accessionNumber, memberNumber, returnDate,bBDId);
            
            int result=BookReceiveDetailController.addReceiveData(bookReceiveDetail);
            if(result==1){
                JOptionPane.showMessageDialog(this, "Book 1 Received");
                BookController.updateAvailability(true,accessionNumber);
                BookBorrowDetailController.updateReturned(true,bBDId);
                updateOrderReturned(accessionNumber);
                checkOrdered(memberNumber);
            }
        }catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
      private void receiveBook2(){
        try {
            String bRDId=IdGenarate.getId("BRD", "BRDID","BookReceiveDetail");
            String accessionNumber=accessionNumberText2.getText();
            String memberNumber=memberNumberText.getText();
            String returnDate=returnDate2.getText();
            String bBDId= bBDCIdText2.getText();
            BookReceiveDetail bookReceiveDetail=new BookReceiveDetail(bRDId, accessionNumber, memberNumber, returnDate,bBDId);            
            int result=BookReceiveDetailController.addReceiveData(bookReceiveDetail);
            if(result==1){
                JOptionPane.showMessageDialog(this, "Book 2 Received");
                BookController.updateAvailability(true,accessionNumber);
                BookBorrowDetailController.updateReturned(true,bBDId);
                updateOrderReturned(accessionNumber);
                checkOrdered(memberNumber);
            }
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void updateOrderReturned(String accessionNumber){
         try {
             ArrayList<OrderBookDetail> orders = OrderBookDetailController.getOrderDetail();
             for(OrderBookDetail orderBook: orders){
                   if(accessionNumber.equals(orderBook.getAccessionNumber())){
                        Order order = OrderController.getOrderDetail(orderBook.getoId());
                        String name = MemberController.getMemberName(order.getMemberNumber());
                        OrderController.updateReturned(true,orderBook.getoId(),accessionNumber);
                        JOptionPane.showMessageDialog(this, "This Book("+accessionNumber+") is Ordered by ("+order.getMemberNumber()+") "+name,"Ordered Book",JOptionPane.INFORMATION_MESSAGE);
                        OrderBookDetailController.deleteDetail(orderBook.getoId());
                        break;
                   }
             }
             
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(),"Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
   }
    
    private void checkOrdered(String memberNumber){
        try {
            ArrayList<OrderDetail> orderDetails = OrderController.getAllOrderDetail();
                for(OrderDetail orderDetail : orderDetails){
                    if(orderDetail.isReturned()){
                           if(memberNumber.equals(orderDetail.getMemberNumber())){
                                JOptionPane.showMessageDialog(this, "Your ordered book("+orderDetail.getTitle()+" ) has Retruned","Ordered Book",JOptionPane.INFORMATION_MESSAGE);
                                OrderController.deleteOrder(orderDetail.getoId());
                            }
                        
                    }
                }
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
      
      
      
      
      
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReceiveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReceiveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReceiveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReceiveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReceiveBook dialog = new ReceiveBook(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JLabel accessionNumberLabel1;
    private javax.swing.JLabel accessionNumberLabel2;
    private javax.swing.JTextField accessionNumberText1;
    private javax.swing.JTextField accessionNumberText2;
    private javax.swing.JLabel bBDCIdLabel1;
    private javax.swing.JLabel bBDCIdLabel2;
    private javax.swing.JTextField bBDCIdText1;
    private javax.swing.JTextField bBDCIdText2;
    private javax.swing.JPanel book1Panel;
    private javax.swing.JRadioButton book1Radio;
    private javax.swing.JPanel book2Panel;
    private javax.swing.JRadioButton book2Radio;
    private javax.swing.JLabel booktitleLabel1;
    private javax.swing.JLabel booktitleLabel2;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel dueDatesLabel1;
    private javax.swing.JLabel dueDatesLabel2;
    private javax.swing.JLabel hintLabel;
    private javax.swing.JLabel memberNumberLabel;
    private javax.swing.JTextField memberNumberText;
    private javax.swing.JTextField returnDate1;
    private javax.swing.JTextField returnDate2;
    private javax.swing.JLabel returnDateLabel1;
    private javax.swing.JLabel returnDateLabel2;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleText1;
    private javax.swing.JTextField titleText2;
    // End of variables declaration//GEN-END:variables
}
