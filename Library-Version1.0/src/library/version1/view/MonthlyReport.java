/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package library.version1.view;

import java.awt.Toolkit;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import library.version1.controller.BookBorrowDetailController;
import library.version1.controller.ReportController;
import library.version1.db.DBConnection;
import library.version1.db.DBHandle;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.data.JRMapCollectionDataSource;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;

/**
 *
 * @author Neo_
 */
public class MonthlyReport extends javax.swing.JDialog {
    DefaultTableModel dtm;
    /**
     * Creates new form DailyReport
     */
    public MonthlyReport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setSize(Toolkit.getDefaultToolkit().getScreenSize());
        
        dtm = (DefaultTableModel)table.getModel();
        
        initMonthCombo();
        setTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        titleLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        monthCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "000", "100", "200", "300", "400", "500", "600", "700", "800", "900", "Books", "Members"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);
        table.getColumnModel().getColumn(0).setResizable(false);
        table.getColumnModel().getColumn(1).setResizable(false);
        table.getColumnModel().getColumn(2).setResizable(false);
        table.getColumnModel().getColumn(3).setResizable(false);
        table.getColumnModel().getColumn(4).setResizable(false);
        table.getColumnModel().getColumn(5).setResizable(false);
        table.getColumnModel().getColumn(6).setResizable(false);
        table.getColumnModel().getColumn(7).setResizable(false);
        table.getColumnModel().getColumn(8).setResizable(false);
        table.getColumnModel().getColumn(9).setResizable(false);
        table.getColumnModel().getColumn(10).setResizable(false);
        table.getColumnModel().getColumn(11).setResizable(false);
        table.getColumnModel().getColumn(12).setResizable(false);

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/document-scroll-icon.png"))); // NOI18N
        titleLabel.setText("Monthly Report");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        monthCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboActionPerformed(evt);
            }
        });

        jLabel2.setText("Month");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 1215, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void monthComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboActionPerformed
        setTable();        // TODO add your handling code here:
    }//GEN-LAST:event_monthComboActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            this.setVisible(false);
                      
            List list=new ArrayList();

            Map map=new HashMap();

            for(int i=0;i<table.getRowCount();i++){
                map=new HashMap();
                map.put("Date", table.getValueAt(i, 0));
                map.put("000", table.getValueAt(i, 1));
                map.put("100", table.getValueAt(i, 2));
                map.put("200", table.getValueAt(i, 3));
                map.put("300", table.getValueAt(i, 4));
                map.put("400", table.getValueAt(i, 5));
                map.put("500", table.getValueAt(i, 6));
                map.put("600", table.getValueAt(i, 7));
                map.put("700", table.getValueAt(i, 8));
                map.put("800", table.getValueAt(i, 9));
                map.put("900", table.getValueAt(i, 10));
                map.put("Books", table.getValueAt(i, 11));
                map.put("Members", table.getValueAt(i, 12));
                list.add(map);
            }
            
            JRMapCollectionDataSource tableData=new JRMapCollectionDataSource(list);
            
            ReportController.monthlyReport("./src/library/version1/reports/monthlyReport.jrxml",monthCombo.getSelectedItem().toString(),tableData); 
                                                            // TODO add your handling code here:
        } catch (JRException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(),"Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_printButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    
    
    
    
    private void setTable() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dt = sdf.format(new java.util.Date());  // Start date
            Calendar c = Calendar.getInstance();
            c.setTime(sdf.parse(dt));
            c.set(Calendar.DAY_OF_MONTH, 1);
            c.add(Calendar.MONTH, - monthCombo.getSelectedIndex());
            
                      
           int days = c.getActualMaximum(Calendar.DAY_OF_MONTH);
           
           int rowCount =dtm.getRowCount();
           for(int i=0;i<rowCount;i++){
               dtm.removeRow(0);
           }
           for(int j=0;j<days;j++){
                dt = sdf.format(c.getTime());
                ArrayList<Integer> array = new ArrayList<Integer>();
                int total =0;
                for(int i=0;i<10;i++){
                    TableColumn col = table.getColumnModel().getColumn(i+1);  
                    DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();    
                    dtcr.setHorizontalAlignment(SwingConstants.CENTER);  
                    col.setCellRenderer(dtcr); 
                    
                    
                    int count=  BookBorrowDetailController.getDailyReportCounts(dt,i+"00",(i+1)+"00");
                    total+=count;
                    array.add(count);
                }
                array.add(total);
                int memberCount= BookBorrowDetailController.getDailyReportMemberCount(dt);
                array.add(memberCount);

                Object[] object=new Object[13];
                object[0] = dt;
                for(int i=1 ; i<13 ; i++){
                    object[i]=array.get(i-1);
                }
                c.add(Calendar.DATE, 1);    // number of days to add
                dtm.addRow(object);
                
                TableColumn col = table.getColumnModel().getColumn(11);  
                DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();    
                dtcr.setHorizontalAlignment(SwingConstants.CENTER);  
                col.setCellRenderer(dtcr); 
                
                col = table.getColumnModel().getColumn(12);  
                dtcr.setHorizontalAlignment(SwingConstants.CENTER);  
                col.setCellRenderer(dtcr); 
            }
        }catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),"Error Message", JOptionPane.ERROR_MESSAGE);
        }
    
    }
    
    public void initMonthCombo(){
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MMMMMMMM");
            String dt = sdf.format(new java.util.Date());  // Start date
            Calendar c = Calendar.getInstance();
            c.setTime(sdf.parse(dt));
            c.set(Calendar.DAY_OF_MONTH, 1);
             for(int i=0 ; i<12 ; i++){
                 monthCombo.addItem(dt);
                 c.add(Calendar.MONTH, -1);
                 dt = sdf.format(c.getTime());
            }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),"Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonthlyReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonthlyReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonthlyReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonthlyReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MonthlyReport dialog = new MonthlyReport(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox monthCombo;
    private javax.swing.JButton printButton;
    private javax.swing.JTable table;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
