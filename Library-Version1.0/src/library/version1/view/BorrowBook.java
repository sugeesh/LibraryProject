/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package library.version1.view;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import library.version1.controller.BookAuthorDetailController;
import library.version1.controller.BookBorrowDetailController;
import library.version1.controller.BookController;
import library.version1.controller.BookTitleController;
import library.version1.controller.MemberController;
import library.version1.controller.OrderController;
import library.version1.extra.IdGenarate;
import library.version1.extra.Validate;
import library.version1.model.BookBorrowDetail;
import library.version1.model.OrderDetail;

/**
 *
 * @author Neo_
 */
public class BorrowBook extends javax.swing.JDialog {

    /**
     * Creates new form BorrowBook
     */
    public BorrowBook(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
        
        setResizable(false);
        setLocationRelativeTo(null);
        
        bookButtonGroup.add(singleBookRadio);
        bookButtonGroup.add(twoBooksRadio);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookButtonGroup = new javax.swing.ButtonGroup();
        titleLabel = new javax.swing.JLabel();
        book1Panel = new javax.swing.JPanel();
        accessionNumberText1 = new javax.swing.JTextField();
        accessionNumberLabel1 = new javax.swing.JLabel();
        bookTitleLabel1 = new javax.swing.JLabel();
        bookTitleText1 = new javax.swing.JTextField();
        authorLabel1 = new javax.swing.JLabel();
        authorText1 = new javax.swing.JTextField();
        book2Panel = new javax.swing.JPanel();
        accessionNumberLabel2 = new javax.swing.JLabel();
        accessionNumberText2 = new javax.swing.JTextField();
        bookTitleLabel2 = new javax.swing.JLabel();
        bookTitleText2 = new javax.swing.JTextField();
        authorLabel2 = new javax.swing.JLabel();
        authorText2 = new javax.swing.JTextField();
        memberPanel = new javax.swing.JPanel();
        memberNumberLabel = new javax.swing.JLabel();
        memberNumberText = new javax.swing.JTextField();
        memberNameLabel = new javax.swing.JLabel();
        memberNameText = new javax.swing.JTextField();
        singleBookRadio = new javax.swing.JRadioButton();
        twoBooksRadio = new javax.swing.JRadioButton();
        hintLabel = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Borrow Books");

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Nemo-Diary-Book-icon.png"))); // NOI18N
        titleLabel.setText("Borrow Books");

        book1Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Book 1"));

        accessionNumberText1.setEnabled(false);
        accessionNumberText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessionNumberText1ActionPerformed(evt);
            }
        });
        accessionNumberText1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                accessionNumberText1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                accessionNumberText1KeyReleased(evt);
            }
        });

        accessionNumberLabel1.setText("Accession Number");

        bookTitleLabel1.setText("Book Title");

        bookTitleText1.setEnabled(false);

        authorLabel1.setText("Author");

        authorText1.setEnabled(false);

        javax.swing.GroupLayout book1PanelLayout = new javax.swing.GroupLayout(book1Panel);
        book1Panel.setLayout(book1PanelLayout);
        book1PanelLayout.setHorizontalGroup(
            book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, book1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(authorLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookTitleLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(accessionNumberLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(accessionNumberText1)
                    .addComponent(bookTitleText1)
                    .addComponent(authorText1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                .addGap(56, 56, 56))
        );
        book1PanelLayout.setVerticalGroup(
            book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(book1PanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accessionNumberLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accessionNumberText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookTitleLabel1)
                    .addComponent(bookTitleText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(book1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(book1PanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(authorLabel1))
                    .addGroup(book1PanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(authorText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        book2Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Book 2"));

        accessionNumberLabel2.setText("Accession Number");

        accessionNumberText2.setEnabled(false);
        accessionNumberText2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessionNumberText2ActionPerformed(evt);
            }
        });
        accessionNumberText2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                accessionNumberText2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                accessionNumberText2KeyReleased(evt);
            }
        });

        bookTitleLabel2.setText("Book Title");

        bookTitleText2.setEnabled(false);

        authorLabel2.setText("Author");

        authorText2.setEnabled(false);

        javax.swing.GroupLayout book2PanelLayout = new javax.swing.GroupLayout(book2Panel);
        book2Panel.setLayout(book2PanelLayout);
        book2PanelLayout.setHorizontalGroup(
            book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(book2PanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(authorLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(accessionNumberLabel2)
                    .addComponent(bookTitleLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(accessionNumberText2)
                    .addComponent(bookTitleText2)
                    .addComponent(authorText2, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        book2PanelLayout.setVerticalGroup(
            book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(book2PanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accessionNumberLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accessionNumberText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookTitleLabel2)
                    .addComponent(bookTitleText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(book2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorLabel2)
                    .addComponent(authorText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        memberPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Memeber"));

        memberNumberLabel.setText("Member Number");

        memberNumberText.setNextFocusableComponent(singleBookRadio);
        memberNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberNumberTextActionPerformed(evt);
            }
        });
        memberNumberText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                memberNumberTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                memberNumberTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                memberNumberTextKeyTyped(evt);
            }
        });

        memberNameLabel.setText("Member Name");

        memberNameText.setEnabled(false);

        singleBookRadio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        singleBookRadio.setText("Single Book");
        singleBookRadio.setEnabled(false);
        singleBookRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleBookRadioActionPerformed(evt);
            }
        });

        twoBooksRadio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        twoBooksRadio.setText("Two Books");
        twoBooksRadio.setEnabled(false);
        twoBooksRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoBooksRadioActionPerformed(evt);
            }
        });

        hintLabel.setText("Type Member Number and Press Enter,");

        javax.swing.GroupLayout memberPanelLayout = new javax.swing.GroupLayout(memberPanel);
        memberPanel.setLayout(memberPanelLayout);
        memberPanelLayout.setHorizontalGroup(
            memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(memberPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hintLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(memberPanelLayout.createSequentialGroup()
                        .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(memberNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(memberNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(memberPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(memberNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, memberPanelLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(memberNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(228, 228, 228)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(singleBookRadio)
                    .addComponent(twoBooksRadio))
                .addGap(135, 135, 135))
        );
        memberPanelLayout.setVerticalGroup(
            memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(memberPanelLayout.createSequentialGroup()
                .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(memberPanelLayout.createSequentialGroup()
                        .addComponent(hintLabel)
                        .addGap(11, 11, 11)
                        .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(memberNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(memberNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(memberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(memberNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(memberNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(memberPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(singleBookRadio)
                        .addGap(18, 18, 18)
                        .addComponent(twoBooksRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        acceptButton.setText("Accept");
        acceptButton.setEnabled(false);
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1061, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 15, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(memberPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(book1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(book2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(memberPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(book1Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(book2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setForm(){
        memberNumberText.setText(null);
        memberNameText.setText(null);
        memberNameText.setEnabled(false);
        singleBookRadio.setEnabled(false);
        twoBooksRadio.setEnabled(false);
        acceptButton.setEnabled(false);
        accessionNumberText1.setText(null);
        accessionNumberText1.setEnabled(false); 
        accessionNumberText2.setText(null);
        accessionNumberText2.setEnabled(false);
        bookTitleText1.setText(null);
        bookTitleText2.setText(null);
        authorText1.setText(null);
        authorText1.setText(null);
    }
    
    
    
    
    private void enableBook1(boolean bool){
        accessionNumberText1.setEnabled(bool);
    }
    
    private void enableBook2(boolean bool){
        accessionNumberText2.setEnabled(bool);
    }
    
    private void addBook1BorrowDetail(){
        String memberNumber=memberNumberText.getText();
        String accessionNumber=accessionNumberText1.getText();
        try {
            String bBDId = IdGenarate.getId("BBD", "BBDId","BookBorrowDetail");
            BookBorrowDetail bookBorrowDetail=new BookBorrowDetail(bBDId,memberNumber,accessionNumber);
            if(BookController.checkAvailability(accessionNumber)){
                int result=BookBorrowDetailController.addBorrowingData(bookBorrowDetail);            // TODO add your handling code here:
                if(result==1){
                    BookController.updateAvailability(false,accessionNumber);
                    JOptionPane.showMessageDialog(this, "Book 1 Borrowing Record Added");
                   
                   
                }
            }else{
                JOptionPane.showMessageDialog(this, "Book 1 is not Available");
                accessionNumberText1.requestFocus();
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {            
            JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }    
    }
    
    
    private void addBook2BorrowDetail(){
        String memberNumber=memberNumberText.getText();
        String accessionNumber=accessionNumberText2.getText();
       
        try {
            String bBDId = IdGenarate.getId("BBD", "BBDId","BookBorrowDetail");
            BookBorrowDetail bookBorrowDetail=new BookBorrowDetail(bBDId,memberNumber,accessionNumber);
            if(BookController.checkAvailability(accessionNumber)){
                int result=BookBorrowDetailController.addBorrowingData(bookBorrowDetail);            // TODO add your handling code here:
                if(result==1){
                    BookController.updateAvailability(false,accessionNumber);
                    JOptionPane.showMessageDialog(this, "Book 2 Borrowing Record Added");
                  
                }
            }else{
                JOptionPane.showMessageDialog(this, "Book 2 is not Available");
                accessionNumberText2.requestFocus();
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {            
            JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }    
    }
    
    
    
    private void singleBookRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleBookRadioActionPerformed
        enableBook1(true);                 // TODO add your handling code here:
        enableBook2(false);
        acceptButton.setEnabled(false);
    }//GEN-LAST:event_singleBookRadioActionPerformed

    private void twoBooksRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoBooksRadioActionPerformed
        enableBook1(true);        // TODO add your handling code here:
        enableBook2(true);
        acceptButton.setEnabled(false);
    }//GEN-LAST:event_twoBooksRadioActionPerformed

    private void accessionNumberText1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accessionNumberText1KeyReleased
        try {
            if(BookController.checkAvailability(accessionNumberText1.getText())){
                if(!OrderController.checkBook(accessionNumberText1.getText())){
                    String title = BookTitleController.getTitleForBook(accessionNumberText1.getText());          // TODO add your handling code here:
                    String author = BookAuthorDetailController.getAuthorForBook(accessionNumberText1.getText());

                    bookTitleText1.setText(title);
                    authorText1.setText(author);
                }else{
                    bookTitleText1.setText("Sorry . This book is Ordered Book.");
                    authorText1.setText(null);
                }
            }else{
                bookTitleText1.setText("This book is not available");
                authorText1.setText(null);
            }
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
        
        if(bookButtonGroup.isSelected(singleBookRadio.getModel())){
            if(!accessionNumberText1.getText().isEmpty() && !authorText1.getText().isEmpty()){
                acceptButton.setEnabled(true);
            }else{
                acceptButton.setEnabled(false);
            }
        }else{
            if(!authorText2.getText().isEmpty() && !authorText1.getText().isEmpty()){
                acceptButton.setEnabled(true);
            }else{
                acceptButton.setEnabled(false);
            }
        }       
        
               
    }//GEN-LAST:event_accessionNumberText1KeyReleased

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        int date=0;
        try {
            date = MemberController.checkRenewDate(memberNumberText.getText());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BorrowBook.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BorrowBook.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(date>0){
            if(date<15){
                JOptionPane.showMessageDialog(this,"You have only "+date+" days to expire your renew date");
            }
            if(bookButtonGroup.isSelected(singleBookRadio.getModel())){
                addBook1BorrowDetail();
            }else{
                addBook1BorrowDetail();
                addBook2BorrowDetail();
            }
        }else{
            JOptionPane.showMessageDialog(this,"Your Renew date expired. Please Update your membership","MemeberShip Expired",JOptionPane.ERROR_MESSAGE);
        }
        setForm();
        
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void accessionNumberText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessionNumberText1ActionPerformed
        if(!twoBooksRadio.isSelected()){
            acceptButton.doClick();
                
        }else{
            accessionNumberText2.requestFocus();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_accessionNumberText1ActionPerformed

    private void accessionNumberText2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessionNumberText2ActionPerformed
        acceptButton.doClick();        // TODO add your handling code here:
    }//GEN-LAST:event_accessionNumberText2ActionPerformed

    private void accessionNumberText1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accessionNumberText1KeyPressed
      if(!Validate.validateAccessionNumber(accessionNumberText1.getText()+evt.getKeyChar()+"")){
               if(evt.getKeyCode()!=KeyEvent.VK_BACK_SPACE){
                    getToolkit().beep();
                    accessionNumberText1.setEditable(false);
                }else{
                    accessionNumberText1.setEditable(true);
                }
           }else{
              accessionNumberText1.setEditable(true);
      }   // TODO add your handling code here:
    }//GEN-LAST:event_accessionNumberText1KeyPressed

    private void accessionNumberText2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accessionNumberText2KeyReleased
        try {
            if(BookController.checkAvailability(accessionNumberText2.getText())){
                if(!OrderController.checkBook(accessionNumberText2.getText())){
                    String title = BookTitleController.getTitleForBook(accessionNumberText2.getText());          // TODO add your handling code here:
                    String author = BookAuthorDetailController.getAuthorForBook(accessionNumberText2.getText());

                    bookTitleText2.setText(title);
                    authorText2.setText(author);
                }else{
                    bookTitleText2.setText("Sorry . This book is Ordered Book.");
                    authorText2.setText(null);
                }
            }else{
                bookTitleText2.setText("This book is not available");
                authorText2.setText(null);
            }
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
        
        
        if(!authorText1.getText().isEmpty() && !authorText2.getText().isEmpty()){
            acceptButton.setEnabled(true);
        }else{
            acceptButton.setEnabled(false);
        }// TODO add your handling code here:
    }//GEN-LAST:event_accessionNumberText2KeyReleased

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void accessionNumberText2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accessionNumberText2KeyPressed
      if(!Validate.validateAccessionNumber(accessionNumberText2.getText() +evt.getKeyChar()+"")){
               if(evt.getKeyCode()!=KeyEvent.VK_BACK_SPACE){
                    getToolkit().beep();
                    accessionNumberText2.setEditable(false);
                }else{
                    accessionNumberText2.setEditable(true);
                }
           }else{
              accessionNumberText2.setEditable(true);
      }         // TODO add your handling code here:
    }//GEN-LAST:event_accessionNumberText2KeyPressed

    private void memberNumberTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memberNumberTextKeyTyped
     // TODO add your handling code here:
    }//GEN-LAST:event_memberNumberTextKeyTyped

    private void memberNumberTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memberNumberTextKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_memberNumberTextKeyReleased

    private void memberNumberTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_memberNumberTextKeyPressed
        if(!Validate.validateMemberNumber(memberNumberText.getText()+evt.getKeyChar()+"")){
            if(evt.getKeyCode()!=KeyEvent.VK_BACK_SPACE){
                getToolkit().beep();
                memberNumberText.setEditable(false);
            }else{
                memberNumberText.setEditable(true);
            }
        }else{
            memberNumberText.setEditable(true);
        }                // TODO add your handling code here:

    }//GEN-LAST:event_memberNumberTextKeyPressed

    private void memberNumberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberNumberTextActionPerformed
        if(!memberNumberText.getText().isEmpty()){     // TODO add your handling code here:
            try {
                memberNameText.setText(MemberController.getMemberName(memberNumberText.getText()));
                if(!memberNameText.getText().isEmpty()){
                    //to Check Member Has How many Books
                    int bookCount =BookBorrowDetailController.checkMember(memberNumberText.getText());
                    if(bookCount>=2){
                        JOptionPane.showMessageDialog(this, "YOU ALREADY GOT TWO BOOKS");
                        singleBookRadio.setEnabled(false);
                        twoBooksRadio.setEnabled(false);
                    }else if(bookCount==1){
                        JOptionPane.showMessageDialog(this, "YOU ALREADY GOT ONE BOOK");
                        singleBookRadio.setEnabled(true);
                        twoBooksRadio.setEnabled(false);
                    }else{
                        singleBookRadio.setEnabled(true);
                        twoBooksRadio.setEnabled(true);
                    }
                    checkOrdered(memberNumberText.getText());
                }
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
            }
        }           // TODO add your handling code here:
    }//GEN-LAST:event_memberNumberTextActionPerformed

    private void checkOrdered(String memberNumber){
        try {
            ArrayList<OrderDetail> orderDetails = OrderController.getAllOrderDetail();
                for(OrderDetail orderDetail : orderDetails){
                    if(orderDetail.isReturned()){
                           if(memberNumber.equals(orderDetail.getMemberNumber())){
                                JOptionPane.showMessageDialog(this, "Your ordered book("+orderDetail.getTitle()+" ) has Retruned","Ordered Book",JOptionPane.INFORMATION_MESSAGE);
                                OrderController.deleteOrder(orderDetail.getoId());
                            }
                        
                    }
                }
        } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Connection Error ","Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BorrowBook dialog = new BorrowBook(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JLabel accessionNumberLabel1;
    private javax.swing.JLabel accessionNumberLabel2;
    private javax.swing.JTextField accessionNumberText1;
    private javax.swing.JTextField accessionNumberText2;
    private javax.swing.JLabel authorLabel1;
    private javax.swing.JLabel authorLabel2;
    private javax.swing.JTextField authorText1;
    private javax.swing.JTextField authorText2;
    private javax.swing.JPanel book1Panel;
    private javax.swing.JPanel book2Panel;
    private javax.swing.ButtonGroup bookButtonGroup;
    private javax.swing.JLabel bookTitleLabel1;
    private javax.swing.JLabel bookTitleLabel2;
    private javax.swing.JTextField bookTitleText1;
    private javax.swing.JTextField bookTitleText2;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel hintLabel;
    private javax.swing.JLabel memberNameLabel;
    private javax.swing.JTextField memberNameText;
    private javax.swing.JLabel memberNumberLabel;
    private javax.swing.JTextField memberNumberText;
    private javax.swing.JPanel memberPanel;
    private javax.swing.JRadioButton singleBookRadio;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JRadioButton twoBooksRadio;
    // End of variables declaration//GEN-END:variables
}
