/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package library.version1.view;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import library.version1.controller.AuthorController;
import library.version1.controller.BookController;
import library.version1.controller.CategoryController;
import library.version1.controller.PublisherController;
import library.version1.controller.SectionController;
import library.version1.extra.IdGenarate;
import library.version1.extra.SearchCombo;
import library.version1.extra.SearchComboSpecial;
import library.version1.extra.Validate;
import library.version1.model.Author;
import library.version1.model.Book;
import library.version1.model.BookAuthorDetail;
import library.version1.model.BookPosition;
import library.version1.model.BookTitle;
import library.version1.model.Publisher;

/**
 *
 * @author Neo_
 */
public class AddBook extends javax.swing.JDialog {

    boolean accessionNumber, title, author, section, category, publisher, price;
    DefaultListModel authorListModel;
    DefaultListModel titleListModel;
    File imageFile = null;
    SearchComboSpecial searchCombo = null;
    SearchCombo searchPublisher = null;

    /**
     * Creates new form AddBook
     */
    public AddBook(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        initAuthorCombo();
        initPublisherCombo();
        initCategoryCombo();
        initSectionCombo();

        ImageIcon picture = new ImageIcon("./src/image/book.jpg");
        Image image = picture.getImage();
        image = image.getScaledInstance(addImageButton.getWidth(), addImageButton.getHeight(), image.SCALE_SMOOTH);
        picture.setImage(image);
        addImageButton.setIcon(picture);

        authorListModel = new DefaultListModel();
        authorList.setModel(authorListModel);
        titleListModel = new DefaultListModel();
        titleList.setModel(titleListModel);
        searchCombo = new SearchComboSpecial();
        searchCombo.setSearchableCombo(authorCombo, true, addAuthorButton, nextButton1);
        searchPublisher = new SearchCombo();
        searchPublisher.setSearchableCombo(publisherCombo, true);
        accessionNumberText.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headLabel = new javax.swing.JLabel();
        addBookTabedPane = new javax.swing.JTabbedPane();
        bookDetailPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        titleText = new javax.swing.JTextField();
        addTitleButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        titleList = new javax.swing.JList();
        removeTitleButton = new javax.swing.JButton();
        accessionNumberText = new javax.swing.JTextField();
        accessionNumberLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        authorLabel = new javax.swing.JLabel();
        authorCombo = new javax.swing.JComboBox();
        addAuthorButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        authorList = new javax.swing.JList();
        removeAuthorButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        nextButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        addImageButton = new javax.swing.JButton();
        bookPositionDetailPanel = new javax.swing.JPanel();
        sectionLabel = new javax.swing.JLabel();
        addSectionButton = new javax.swing.JButton();
        addCetegoryButton = new javax.swing.JButton();
        categoryLabel = new javax.swing.JLabel();
        backButton1 = new javax.swing.JButton();
        nextButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        categoryCombo = new javax.swing.JComboBox();
        categoryText = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        sectionCombo = new javax.swing.JComboBox();
        publishingDetailsPanel = new javax.swing.JPanel();
        publisherLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        publisherCombo = new javax.swing.JComboBox();
        yearLabel = new javax.swing.JLabel();
        yearChooser = new com.toedter.calendar.JYearChooser();
        backButton2 = new javax.swing.JButton();
        publishingPlaceLabel = new javax.swing.JLabel();
        publishedPlaceText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        donatedBookCheckBox = new javax.swing.JCheckBox();
        misplacedBookCheckBox = new javax.swing.JCheckBox();
        addBookButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Book");

        headLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        headLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/AddBook.png"))); // NOI18N
        headLabel.setText("New Book");

        addBookTabedPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addBookTabedPaneFocusGained(evt);
            }
        });

        bookDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Book Detail"));

        titleLabel.setText("Title");

        titleText.setEnabled(false);
        titleText.setNextFocusableComponent(authorCombo);
        titleText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleTextActionPerformed(evt);
            }
        });
        titleText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                titleTextKeyReleased(evt);
            }
        });

        addTitleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Actions-list-add-icon.png"))); // NOI18N
        addTitleButton.setText("Add to the List");
        addTitleButton.setEnabled(false);
        addTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTitleButtonActionPerformed(evt);
            }
        });

        jScrollPane4.setEnabled(false);

        titleList.setBackground(new java.awt.Color(204, 204, 204));
        titleList.setEnabled(false);
        jScrollPane4.setViewportView(titleList);

        removeTitleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Remove-icon.png"))); // NOI18N
        removeTitleButton.setText("Remove From List");
        removeTitleButton.setEnabled(false);
        removeTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTitleButtonActionPerformed(evt);
            }
        });

        accessionNumberText.setNextFocusableComponent(titleText);
        accessionNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessionNumberTextActionPerformed(evt);
            }
        });
        accessionNumberText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                accessionNumberTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                accessionNumberTextKeyReleased(evt);
            }
        });

        accessionNumberLabel.setText("Accession Number");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeTitleButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addTitleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(accessionNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(accessionNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(titleText, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accessionNumberLabel)
                    .addComponent(accessionNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTitleButton))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeTitleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        authorLabel.setText("Author");

        authorCombo.setEditable(true);
        authorCombo.setToolTipText("");
        authorCombo.setEnabled(false);
        authorCombo.setNextFocusableComponent(nextButton1);
        authorCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                authorComboMouseEntered(evt);
            }
        });
        authorCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorComboActionPerformed(evt);
            }
        });
        authorCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                authorComboFocusLost(evt);
            }
        });
        authorCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                authorComboKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                authorComboKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                authorComboKeyTyped(evt);
            }
        });

        addAuthorButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addAuthorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/user-add-icon.png"))); // NOI18N
        addAuthorButton.setText("Add to the List");
        addAuthorButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addAuthorButton.setEnabled(false);
        addAuthorButton.setFocusable(false);
        addAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAuthorButtonActionPerformed(evt);
            }
        });

        authorList.setBackground(new java.awt.Color(204, 204, 204));
        authorList.setEnabled(false);
        authorList.setFocusable(false);
        authorList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                authorListFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                authorListFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(authorList);

        removeAuthorButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removeAuthorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/user-remove-icon.png"))); // NOI18N
        removeAuthorButton.setText("Remove From List");
        removeAuthorButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeAuthorButton.setEnabled(false);
        removeAuthorButton.setFocusable(false);
        removeAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAuthorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(removeAuthorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(authorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(authorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(245, 245, 245)
                                .addComponent(addAuthorButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(authorCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(authorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addAuthorButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeAuthorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        nextButton1.setText("Next >>");
        nextButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton1ActionPerformed(evt);
            }
        });
        nextButton1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nextButton1FocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nextButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 106, Short.MAX_VALUE)
                .addComponent(nextButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Cover Image"));
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        addImageButton.setBorder(null);
        addImageButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addImageButton.setEnabled(false);
        addImageButton.setOpaque(false);
        addImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImageButtonActionPerformed(evt);
            }
        });
        jPanel4.add(addImageButton);

        javax.swing.GroupLayout bookDetailPanelLayout = new javax.swing.GroupLayout(bookDetailPanel);
        bookDetailPanel.setLayout(bookDetailPanelLayout);
        bookDetailPanelLayout.setHorizontalGroup(
            bookDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookDetailPanelLayout.createSequentialGroup()
                .addGroup(bookDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bookDetailPanelLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        bookDetailPanelLayout.setVerticalGroup(
            bookDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bookDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        addBookTabedPane.addTab("Book Detail", bookDetailPanel);

        bookPositionDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("BookPosition"));

        sectionLabel.setText("Section");

        addSectionButton.setText("New Section");
        addSectionButton.setEnabled(false);
        addSectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSectionButtonActionPerformed(evt);
            }
        });

        addCetegoryButton.setText("New Cetegory");
        addCetegoryButton.setEnabled(false);
        addCetegoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCetegoryButtonActionPerformed(evt);
            }
        });

        categoryLabel.setText("Category");

        backButton1.setText("<< Back");
        backButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton1ActionPerformed(evt);
            }
        });
        backButton1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                backButton1FocusGained(evt);
            }
        });

        nextButton2.setText("Next >>");
        nextButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton2ActionPerformed(evt);
            }
        });
        nextButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nextButton2FocusGained(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(381, 30));

        categoryCombo.setEnabled(false);
        categoryCombo.setNextFocusableComponent(nextButton2);
        categoryCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                categoryComboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        categoryCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboActionPerformed(evt);
            }
        });
        categoryCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                categoryComboKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                categoryComboKeyReleased(evt);
            }
        });

        categoryText.setEnabled(false);
        categoryText.setNextFocusableComponent(categoryCombo);
        categoryText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryTextActionPerformed(evt);
            }
        });
        categoryText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                categoryTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                categoryTextKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(categoryText, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(categoryCombo, 0, 317, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(categoryText, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
            .addComponent(categoryCombo)
        );

        sectionCombo.setEnabled(false);
        sectionCombo.setNextFocusableComponent(categoryText);
        sectionCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                sectionComboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        sectionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionComboActionPerformed(evt);
            }
        });
        sectionCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sectionComboKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sectionComboKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sectionCombo, 0, 381, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sectionCombo, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout bookPositionDetailPanelLayout = new javax.swing.GroupLayout(bookPositionDetailPanel);
        bookPositionDetailPanel.setLayout(bookPositionDetailPanelLayout);
        bookPositionDetailPanelLayout.setHorizontalGroup(
            bookPositionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPositionDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookPositionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookPositionDetailPanelLayout.createSequentialGroup()
                        .addComponent(backButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nextButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bookPositionDetailPanelLayout.createSequentialGroup()
                        .addGroup(bookPositionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(bookPositionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(bookPositionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCetegoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addSectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(151, Short.MAX_VALUE))))
        );
        bookPositionDetailPanelLayout.setVerticalGroup(
            bookPositionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPositionDetailPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(bookPositionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sectionLabel)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(bookPositionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(bookPositionDetailPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(bookPositionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCetegoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bookPositionDetailPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 285, Short.MAX_VALUE)
                .addComponent(backButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookPositionDetailPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(nextButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        addBookTabedPane.addTab("Book Position", bookPositionDetailPanel);

        publishingDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Publishing Details"));
        publishingDetailsPanel.setDoubleBuffered(false);

        publisherLabel.setText("Publisher");

        priceLabel.setText("Price");

        priceText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        priceText.setEnabled(false);
        priceText.setNextFocusableComponent(sectionCombo);
        priceText.setPreferredSize(new java.awt.Dimension(6, 30));
        priceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTextActionPerformed(evt);
            }
        });
        priceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceTextKeyReleased(evt);
            }
        });

        publisherCombo.setEditable(true);
        publisherCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        publisherCombo.setEnabled(false);
        publisherCombo.setNextFocusableComponent(yearChooser);
        publisherCombo.setPreferredSize(new java.awt.Dimension(123, 30));
        publisherCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                publisherComboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        publisherCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherComboActionPerformed(evt);
            }
        });
        publisherCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                publisherComboKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                publisherComboKeyReleased(evt);
            }
        });

        yearLabel.setText("Published Year");

        yearChooser.setBackground(new java.awt.Color(255, 255, 255));
        yearChooser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        yearChooser.setEnabled(false);
        yearChooser.setEndYear(2020);
        yearChooser.setMinimumSize(new java.awt.Dimension(47, 30));
        yearChooser.setPreferredSize(new java.awt.Dimension(47, 30));
        yearChooser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearChooserKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                yearChooserKeyReleased(evt);
            }
        });

        backButton2.setText("<< Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });
        backButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                backButton2FocusGained(evt);
            }
        });

        publishingPlaceLabel.setText("Published Place");

        publishedPlaceText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        publishedPlaceText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        publishedPlaceText.setEnabled(false);
        publishedPlaceText.setPreferredSize(new java.awt.Dimension(6, 30));
        publishedPlaceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publishedPlaceTextActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        donatedBookCheckBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        donatedBookCheckBox.setText("Donated Book");
        donatedBookCheckBox.setEnabled(false);
        donatedBookCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donatedBookCheckBoxActionPerformed(evt);
            }
        });

        misplacedBookCheckBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        misplacedBookCheckBox.setForeground(new java.awt.Color(255, 0, 0));
        misplacedBookCheckBox.setText("Misplaced Book");
        misplacedBookCheckBox.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(misplacedBookCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(donatedBookCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(donatedBookCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(misplacedBookCheckBox)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout publishingDetailsPanelLayout = new javax.swing.GroupLayout(publishingDetailsPanel);
        publishingDetailsPanel.setLayout(publishingDetailsPanelLayout);
        publishingDetailsPanelLayout.setHorizontalGroup(
            publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(publishingDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(publishingDetailsPanelLayout.createSequentialGroup()
                .addGroup(publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(publishingPlaceLabel)
                    .addComponent(yearLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(publishedPlaceText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yearChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(priceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(publisherLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(priceText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(publisherCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, 358, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        publishingDetailsPanelLayout.setVerticalGroup(
            publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(publishingDetailsPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(publishingDetailsPanelLayout.createSequentialGroup()
                        .addGroup(publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(publisherCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publisherLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publishingPlaceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publishedPlaceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(yearLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(yearChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(publishingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                .addComponent(backButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        addBookTabedPane.addTab("Publishing Details", publishingDetailsPanel);

        addBookButton.setText("Add Book");
        addBookButton.setEnabled(false);
        addBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addBookTabedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBookTabedPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setForm() {
        accessionNumberText.setText(null);
        titleText.setText(null);
        titleListModel.removeAllElements();
        authorCombo.setSelectedIndex(0);
        authorListModel.removeAllElements();
        initPublisherCombo();
        publishedPlaceText.setText(null);
        priceText.setText(null);
        sectionCombo.setSelectedIndex(0);
        categoryCombo.setSelectedIndex(0);
        categoryText.setText(null);
        categoryText.setEnabled(false);
        titleText.setEnabled(false);
        titleList.setEnabled(false);
        addTitleButton.setEnabled(false);
        removeTitleButton.setEnabled(false);
        authorCombo.setEnabled(false);
        addAuthorButton.setEnabled(false);
        authorList.setEnabled(false);
        removeAuthorButton.setEnabled(false);
        sectionCombo.setEnabled(false);
        addSectionButton.setEnabled(false);
        categoryCombo.setEnabled(false);
        addCetegoryButton.setEnabled(false);
        publisherCombo.setEnabled(false);
        publishedPlaceText.setEnabled(false);

        addImageButton.setEnabled(false);

        ImageIcon picture = new ImageIcon("./src/image/book.jpg");
        Image image = picture.getImage();
        image = image.getScaledInstance(addImageButton.getWidth(), addImageButton.getHeight(), image.SCALE_SMOOTH);
        picture.setImage(image);
        addImageButton.setIcon(picture);

        yearChooser.setEnabled(false);
        priceText.setEnabled(false);
        addBookButton.setEnabled(false);
        publishedPlaceText.setText(null);
        donatedBookCheckBox.setSelected(false);
        misplacedBookCheckBox.setSelected(false);
        accessionNumber = false;
        searchCombo.setSearchableCombo(authorCombo, true, addAuthorButton, nextButton1);
        searchPublisher.setSearchableCombo(publisherCombo, true);
    }

    private void addBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookButtonActionPerformed
        try {
            //Get Details to the Variables 
            String accessionNumber = accessionNumberText.getText();
            //Set Title List
            ArrayList<BookTitle> titleList = new ArrayList<BookTitle>();
            for (int i = 0; i < titleListModel.getSize(); i++) {
                String title = titleListModel.getElementAt(i).toString();
                title = checkTitle(title);
                BookTitle bookTitle = new BookTitle();
                bookTitle.setAccessionNumber(accessionNumber);
                bookTitle.setTitle(title);
                titleList.add(bookTitle);
            }
            String publishedYear = yearChooser.getYear() + "";
            double price = Double.parseDouble(priceText.getText());
            //Set Author List
            ArrayList<BookAuthorDetail> authorId = new ArrayList<BookAuthorDetail>();
            for (int i = 0; i < authorListModel.getSize(); i++) {
                String name = authorListModel.getElementAt(i).toString();
                if (AuthorController.checkAuthor(name)) {
                    String id = AuthorController.getAuthorId(authorListModel.getElementAt(i).toString());
                    BookAuthorDetail bookAuthorDetail = new BookAuthorDetail();
                    bookAuthorDetail.setAId(id);
                    bookAuthorDetail.setAccessionNumber(accessionNumber);
                    authorId.add(bookAuthorDetail);
                } else {
                    String id = IdGenarate.getId("A", "AId", "Author");
                    Author author = new Author(id, name);
                    AuthorController.addAuthor(author);
                    BookAuthorDetail bookAuthorDetail = new BookAuthorDetail();
                    bookAuthorDetail.setAId(id);
                    bookAuthorDetail.setAccessionNumber(accessionNumber);
                    authorId.add(bookAuthorDetail);
                }
            }
            //Set Publisher
            String publisherId = null;
            String name = publisherCombo.getSelectedItem().toString();
            if (PublisherController.checkPublisher(name)) {
                publisherId = PublisherController.getPublisherId(name);
            } else {
                String id = IdGenarate.getId("P", "PId", "Publisher");
                Publisher publisher = new Publisher(id, name);
                int result = PublisherController.addPublisher(publisher);
                if (result == 1) {
                    System.out.println("new Aunthor " + name + " added.");
                    publisherId = id;
                }
            }
            //Set Section
            String sectionId = null;
            sectionId = SectionController.getSectionId(sectionCombo.getSelectedItem().toString());
            System.out.println("Right to section id choose");
            //Set Category
            String categoryId = null;
            categoryId = CategoryController.getCategoryId(categoryCombo.getSelectedItem().toString());
            BookPosition bookPosition = new BookPosition(accessionNumber, sectionId, categoryId);
            String publishedPlace = publishedPlaceText.getText();
            boolean donation = donatedBookCheckBox.isSelected();
            boolean expired = misplacedBookCheckBox.isSelected();
            Book book = new Book(accessionNumber, titleList, authorId, publishedYear, publisherId, price, categoryId, bookPosition, true, publishedPlace, donation, expired);
            //Add Image
            if (imageFile != null) {
                Path from = imageFile.toPath();     //convert from File to Path
                Path to = Paths.get("./src/image/" + accessionNumberText.getText() + ".jpg");; //convert from String to Path
                try {
                    Files.copy(from, to, StandardCopyOption.REPLACE_EXISTING);
                } catch (IOException ex) {
                    Logger.getLogger(AddBook.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            //add Book
            BookController.addBook(book);
//            addBookTabedPane.setSelectedIndex(0);
//            accessionNumberText.requestFocus();
//            initAuthorCombo();
//            setForm();
            
            this.dispose();
            new AddBook(null, true).setVisible(true);
            System.gc();
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(AddBook.this, ex.getMessage());
        }
    }//GEN-LAST:event_addBookButtonActionPerformed

    private void addSectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSectionButtonActionPerformed
        new AddSection(null, true, 1).setVisible(true);
        initSectionCombo();
        enableAddButton();
    }//GEN-LAST:event_addSectionButtonActionPerformed

    private void addCetegoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCetegoryButtonActionPerformed
        new AddCategory(null, true, 1).setVisible(true);
        initCategoryCombo();
        enableAddButton();
    }//GEN-LAST:event_addCetegoryButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);

    }//GEN-LAST:event_cancelButtonActionPerformed

    private void sectionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionComboActionPerformed
        if (sectionCombo.getSelectedIndex() != 0) {
            section = true;
        } else {
            section = false;
        }
        enableAddButton();
    }//GEN-LAST:event_sectionComboActionPerformed

    private void categoryComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboActionPerformed
        if (categoryCombo.getSelectedIndex() != 0 && categoryCombo.getSelectedIndex() != -1) {
            try {
                categoryText.setText(CategoryController.getCategoryDewNumber(categoryCombo.getSelectedItem().toString()));
            } catch (SQLException ex) {
                Logger.getLogger(AddBook.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddBook.class.getName()).log(Level.SEVERE, null, ex);
            }

            category = true;
        } else {
            category = false;
        }
        enableAddButton();
    }//GEN-LAST:event_categoryComboActionPerformed

    private void publisherComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisherComboActionPerformed
        if (publisherCombo.getSelectedIndex() != 0) {
            publisher = true;
        } else {
            publisher = false;
        }

        enableAddButton();
    }//GEN-LAST:event_publisherComboActionPerformed

    private void priceTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextKeyReleased
        if (!priceText.getText().isEmpty()) {
            price = true;
        } else {
            price = false;
        }



        if (!publisherCombo.getSelectedItem().toString().isEmpty()) {
            publisher = true;
        } else {
            publisher = false;
        }

        enableAddButton();
    }//GEN-LAST:event_priceTextKeyReleased

    private void priceTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextKeyPressed
        if (!Validate.validateFloatingPointNumbers(evt.getKeyChar() + "")) {
            getToolkit().beep();
            priceText.setEditable(false);
        } else {
            priceText.setEditable(true);
        }
    }//GEN-LAST:event_priceTextKeyPressed

    private void priceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTextActionPerformed
        addBookButton.doClick();

    }//GEN-LAST:event_priceTextActionPerformed

    private void sectionComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sectionComboKeyReleased
    }//GEN-LAST:event_sectionComboKeyReleased

    private void categoryComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryComboKeyReleased
    }//GEN-LAST:event_categoryComboKeyReleased

    private void publisherComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_publisherComboKeyReleased
    }//GEN-LAST:event_publisherComboKeyReleased

    private void sectionComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sectionComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            sectionCombo.showPopup();

        }
    }//GEN-LAST:event_sectionComboKeyPressed

    private void categoryComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            categoryCombo.showPopup();

        }
    }//GEN-LAST:event_categoryComboKeyPressed

    private void publisherComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_publisherComboKeyPressed
    }//GEN-LAST:event_publisherComboKeyPressed

    private void sectionComboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_sectionComboPopupMenuWillBecomeInvisible
        categoryCombo.requestFocus();
    }//GEN-LAST:event_sectionComboPopupMenuWillBecomeInvisible

    private void categoryComboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_categoryComboPopupMenuWillBecomeInvisible
    }//GEN-LAST:event_categoryComboPopupMenuWillBecomeInvisible

    private void publisherComboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_publisherComboPopupMenuWillBecomeInvisible
    }//GEN-LAST:event_publisherComboPopupMenuWillBecomeInvisible

    private void yearChooserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearChooserKeyReleased
    }//GEN-LAST:event_yearChooserKeyReleased

    private void yearChooserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearChooserKeyPressed
    }//GEN-LAST:event_yearChooserKeyPressed

    private void removeTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTitleButtonActionPerformed
        if (titleList.getSelectedIndex() >= 0) {
            titleListModel.remove(titleList.getSelectedIndex());
        } else {
            JOptionPane.showMessageDialog(this, "Please Select the Title");
        }

        if (titleListModel.getSize() == 0) {
            removeTitleButton.setEnabled(false);
            title = false;
        } else {
            removeTitleButton.setEnabled(true);
            title = true;
        }
        enableAddButton();
    }//GEN-LAST:event_removeTitleButtonActionPerformed

    private void addTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTitleButtonActionPerformed
        String title = titleText.getText();
        if (!titleText.getText().isEmpty()) {
            titleListModel.addElement(title);
            removeTitleButton.setEnabled(true);
            titleList.setEnabled(true);
            this.title = true;
        }
        titleText.setText(null);
        titleText.requestFocus();
        enableAddButton();
    }//GEN-LAST:event_addTitleButtonActionPerformed

    private void authorComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_authorComboKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_authorComboKeyReleased

    private void authorComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_authorComboKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorComboKeyPressed

    private void authorComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorComboActionPerformed

    private void removeAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAuthorButtonActionPerformed
        if (authorList.getSelectedIndex() >= 0) {
            authorListModel.remove(authorList.getSelectedIndex());
        } else {
            JOptionPane.showMessageDialog(this, "Please Select the Author");
        }

        if (authorListModel.getSize() == 0) {
            removeAuthorButton.setEnabled(false);
            author = false;
        } else {
            removeAuthorButton.setEnabled(true);
            author = true;
        }
        enableAddButton();
    }//GEN-LAST:event_removeAuthorButtonActionPerformed

    private void addAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAuthorButtonActionPerformed
        if (authorCombo.getSelectedItem() != null) {
            String name = authorCombo.getSelectedItem().toString();
            if (checkAuthorList(name)) {
                authorListModel.addElement(name);
                removeAuthorButton.setEnabled(true);
                authorList.setEnabled(true);
                author = true;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please type and enter Aurthor name ");
        }
        enableAddButton();

    }//GEN-LAST:event_addAuthorButtonActionPerformed

    private void accessionNumberTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accessionNumberTextKeyReleased
        if (!accessionNumberText.getText().isEmpty()) {
            try { // TODO add your handling code here:
                if (!BookController.checkDuplicate(accessionNumberText.getText())) {
                    accessionNumberTextActiveWorks();
                } else {
                    accessionNumberTextDeactiveWorks();
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddBook.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(AddBook.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            accessionNumberTextDeactiveWorks();
        }
        enableAddButton();

    }//GEN-LAST:event_accessionNumberTextKeyReleased

    private void accessionNumberTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accessionNumberTextKeyPressed
        if (!Validate.validateAccessionNumber(accessionNumberText.getText() + evt.getKeyChar() + "")) {
            if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
                accessionNumberText.setEditable(false);
            } else {
                accessionNumberText.setEditable(true);
            }
        } else {
            accessionNumberText.setEditable(true);
        }
    }//GEN-LAST:event_accessionNumberTextKeyPressed

    private void accessionNumberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessionNumberTextActionPerformed
        titleText.requestFocus();
    }//GEN-LAST:event_accessionNumberTextActionPerformed

    private void titleTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleTextKeyReleased
    }//GEN-LAST:event_titleTextKeyReleased

    private void titleTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleTextActionPerformed
        addTitleButton.doClick();
    }//GEN-LAST:event_titleTextActionPerformed

    private void authorComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_authorComboFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_authorComboFocusLost

    private void nextButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButton1ActionPerformed
        addBookTabedPane.setSelectedIndex(1);
    }//GEN-LAST:event_nextButton1ActionPerformed

    private void authorComboKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_authorComboKeyTyped
    }//GEN-LAST:event_authorComboKeyTyped

    private void authorListFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_authorListFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_authorListFocusGained

    private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton1ActionPerformed
        addBookTabedPane.setSelectedIndex(0);
        accessionNumberText.requestFocus();
    }//GEN-LAST:event_backButton1ActionPerformed

    private void backButton1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_backButton1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_backButton1FocusGained

    private void authorListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_authorListFocusLost
    }//GEN-LAST:event_authorListFocusLost

    private void nextButton1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nextButton1FocusGained
        nextButton1.doClick();
    }//GEN-LAST:event_nextButton1FocusGained

    private void addBookTabedPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addBookTabedPaneFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_addBookTabedPaneFocusGained

    private void nextButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButton2ActionPerformed
        addBookTabedPane.setSelectedIndex(2); // TODO add your handling code here:
        publishedPlaceText.requestFocus();
    }//GEN-LAST:event_nextButton2ActionPerformed

    private void nextButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nextButton2FocusGained
    }//GEN-LAST:event_nextButton2FocusGained

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        addBookTabedPane.setSelectedIndex(1);
        sectionCombo.requestFocus();
    }//GEN-LAST:event_backButton2ActionPerformed

    private void backButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_backButton2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_backButton2FocusGained

    private void authorComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_authorComboMouseEntered
    }//GEN-LAST:event_authorComboMouseEntered

    private void publishedPlaceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publishedPlaceTextActionPerformed
        publisherCombo.requestFocus();
    }//GEN-LAST:event_publishedPlaceTextActionPerformed

    private void categoryTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryTextActionPerformed

    private void categoryTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryTextKeyReleased
        String dew = categoryText.getText();
        try {
            String name = CategoryController.getCategoryforDewNumber(dew); // TODO add your handling code here:
            if (name != null) {
                categoryCombo.setSelectedItem(name);
            } else {
                name = CategoryController.getCategoryforDewNumber("0" + dew);
                if (name != null) {
                    categoryCombo.setSelectedItem(name);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddBook.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddBook.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_categoryTextKeyReleased

    private void donatedBookCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donatedBookCheckBoxActionPerformed
        if (!publisherCombo.getSelectedItem().toString().isEmpty()) {
            publisher = true;
        } else {
            publisher = false;
        }
        enableAddButton();
    }//GEN-LAST:event_donatedBookCheckBoxActionPerformed

    private void addImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImageButtonActionPerformed
        JFileChooser openFileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("jpg File", "jpg");
        openFileChooser.setFileFilter(filter);
        openFileChooser.showOpenDialog(this);
        File file = openFileChooser.getSelectedFile();
        if (file != null) {
            this.imageFile = file;
            ImageIcon picture = new ImageIcon(file.getPath());
            Image image = picture.getImage();
            image = image.getScaledInstance(addImageButton.getWidth(), addImageButton.getHeight(), image.SCALE_SMOOTH);
            picture.setImage(image);
            addImageButton.setIcon(picture);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_addImageButtonActionPerformed

    private void categoryTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryTextKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryTextKeyPressed

    private void enableAddButton() {
        if (accessionNumber && title && author && section && category && publisher && price) {
            addBookButton.setEnabled(true);
        } else {
            addBookButton.setEnabled(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddBook dialog = new AddBook(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accessionNumberLabel;
    private javax.swing.JTextField accessionNumberText;
    private javax.swing.JButton addAuthorButton;
    private javax.swing.JButton addBookButton;
    private javax.swing.JTabbedPane addBookTabedPane;
    private javax.swing.JButton addCetegoryButton;
    private javax.swing.JButton addImageButton;
    private javax.swing.JButton addSectionButton;
    private javax.swing.JButton addTitleButton;
    private javax.swing.JComboBox authorCombo;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JList authorList;
    private javax.swing.JButton backButton1;
    private javax.swing.JButton backButton2;
    private javax.swing.JPanel bookDetailPanel;
    private javax.swing.JPanel bookPositionDetailPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox categoryCombo;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JTextField categoryText;
    private javax.swing.JCheckBox donatedBookCheckBox;
    private javax.swing.JLabel headLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JCheckBox misplacedBookCheckBox;
    private javax.swing.JButton nextButton1;
    private javax.swing.JButton nextButton2;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceText;
    private javax.swing.JTextField publishedPlaceText;
    private javax.swing.JComboBox publisherCombo;
    private javax.swing.JLabel publisherLabel;
    private javax.swing.JPanel publishingDetailsPanel;
    private javax.swing.JLabel publishingPlaceLabel;
    private javax.swing.JButton removeAuthorButton;
    private javax.swing.JButton removeTitleButton;
    private javax.swing.JComboBox sectionCombo;
    private javax.swing.JLabel sectionLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JList titleList;
    private javax.swing.JTextField titleText;
    private com.toedter.calendar.JYearChooser yearChooser;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables

    private void initAuthorCombo() {
        try {
            authorCombo.removeAllItems();
            ArrayList<String> authorList = AuthorController.getAuthorNames();
            authorCombo.addItem(null);
            if (authorList != null) {
                for (String name : authorList) {
                    authorCombo.addItem(name);
                }
            }
            System.out.println(authorList);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Database Connection Error");
        }


    }

    private void initPublisherCombo() {
        try {
            publisherCombo.removeAllItems();
            publisherCombo.addItem("");
            ArrayList<String> publisherList = PublisherController.getPublisherNames();
            if (publisherList != null) {
                for (String name : publisherList) {
                    publisherCombo.addItem(name);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Database Connection Error");
        }
    }

    private void initCategoryCombo() {
        try {
            categoryCombo.removeAllItems();
            categoryCombo.addItem("<Select Category>");
            ArrayList<String> categoryList = CategoryController.getCategoryNames();
            if (categoryList != null) {
                for (String name : categoryList) {
                    categoryCombo.addItem(name);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Database Connection Error");
        }
    }

    private void initSectionCombo() {
        try {
            sectionCombo.removeAllItems();
            sectionCombo.addItem("<Choose Section>");
            ArrayList<String> sectionList = SectionController.getSectionNames();
            if (sectionList != null) {
                for (String number : sectionList) {
                    sectionCombo.addItem(number);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Database Connection Error");
        }
    }

    private boolean checkAuthorList(String name) {
        boolean check = true;
        for (int i = 0; i < authorListModel.getSize(); i++) {
            if (authorListModel.getElementAt(i).toString().trim().equals(name.trim())) {
                check = false;
                break;
            }
        }
        return check;
    }

    private String checkTitle(String title) {
        return title.replace("\'", "\\\'");
    }

    private void accessionNumberTextActiveWorks() {
        accessionNumber = true;
        titleText.setEnabled(true);
        titleList.setEnabled(true);
        addTitleButton.setEnabled(true);
        removeTitleButton.setEnabled(true);
        authorCombo.setEnabled(true);
        addImageButton.setEnabled(true);
        sectionCombo.setEnabled(true);
        addSectionButton.setEnabled(true);
        categoryCombo.setEnabled(true);
        categoryText.setEnabled(true);
        addCetegoryButton.setEnabled(true);
        publisherCombo.setEnabled(true);
        yearChooser.setEnabled(true);
        priceText.setEnabled(true);
        publishedPlaceText.setEnabled(true);
        donatedBookCheckBox.setEnabled(true);
        misplacedBookCheckBox.setEnabled(true);
    }

    private void accessionNumberTextDeactiveWorks() {
        accessionNumber = false;
        titleText.setEnabled(false);
        titleList.setEnabled(false);
        addTitleButton.setEnabled(false);
        removeTitleButton.setEnabled(false);
        authorCombo.setEnabled(false);
        addAuthorButton.setEnabled(false);
        removeAuthorButton.setEnabled(false);
        authorList.setEnabled(false);
        addImageButton.setEnabled(false);
        sectionCombo.setEnabled(false);
        addSectionButton.setEnabled(false);
        categoryCombo.setEnabled(false);
        categoryText.setEnabled(false);
        addCetegoryButton.setEnabled(false);
        publisherCombo.setEnabled(false);
        yearChooser.setEnabled(false);
        priceText.setEnabled(false);
        publishedPlaceText.setEnabled(false);
        donatedBookCheckBox.setEnabled(false);
        misplacedBookCheckBox.setEnabled(false);
    }
}
